1. Mutex
     뮤텍스란 MUTual EXclusion. 말 그대로 "상호 배제"로 해석 된다.
     가장 쉽게 생각하자면 중복 실행 금지 프로그램이라고 생각하는 것도 비슷하다.  윈도우에ㅌ 프로그램을 하나만 띄워야 하는 프로그램을 만들거나, 
     실행 되고 있는 프로그램을 다시 실행 했을 경우 "실행 중인 해당 프로그램을 보여주거나" "이미 실행 되었다는 메시지"를 뿌려 주는 식이라고 가정한다면 뮤텍스를 사용 하는것이 좋다.
     
     
2. 멀티 코아와 멀티 스레드에 대한 고찰.

    성능은 면적(트랜지스터 수) 증가량의 제곱근과 비례하다. 하지만 최근에는 CPU 면적에 트랜지스터 수 증가와 함께 성능을 향상 시키는데 한계를 느끼고 있음.
    그 대신에 CPU 의 프로세스를 여러개 넣자는 발상,  하지만 역활 분담이 별령화 되지 않으면 제대로 된 성능을 뽑을 수 없음. 예) 다이렉트 X

    멀티 코어를 100% 를 활용하여 프로그래밍을 하기 위해 멀트 스레드를 이용하게 되는데, 각각의 스레드들 간에 공유 자원이 적고, 스레드 1번의 결과가 스레드 2번에게 전달되어서 처리가되어야 한다면
    	멀트 스레드를 사용하는 의미가 없음. 즉 각각의 스레드들은 동일한 일들을 독립적으로 처리하여야만 멀티 코어를 100% 사용할 수 있다고 생각함.

    
    
    

http://www.gamedevforever.com/42
http://dextto.tistory.com/196
   
   